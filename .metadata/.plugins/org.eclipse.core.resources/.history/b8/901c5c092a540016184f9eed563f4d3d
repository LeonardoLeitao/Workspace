package net.fourdoors.VIEW;

import java.util.Random;

import org.newdawn.slick.BasicGame;
import org.newdawn.slick.Color;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.geom.Vector2f;

import net.fourdoors.MODEL.ComportamentoUpgradeUpSpeed;
import net.fourdoors.MODEL.Jogador;
import net.fourdoors.MODEL.Upgrade;

public class TelaPrincipal4Doors extends BasicGame {
	private Jogador jogador;
	private Vector2f posicao;
	private Random random;
	Upgrade upgrade;
	
	public TelaPrincipal4Doors(String title) {
		super(title);
	}

	@Override
	public void init(GameContainer gc) throws SlickException {
		this.jogador = new Jogador("Leonardo", new Image("data/personagem.png"));
		this.posicao = new Vector2f(0,0);
		this.random = new Random();
		this.upgrade = new Upgrade("UpSpeed", new Image("data/upspeed.png"), new ComportamentoUpgradeUpSpeed());
	}
	
	@Override
	public void render(GameContainer gc, Graphics g) throws SlickException {
		g.setColor(Color.red);
		this.jogador.getImagemDoPersonagem().getScaledCopy(100, 100).draw(this.jogador.getPosicaoDoPersonagem().getX()
				, this.jogador.getPosicaoDoPersonagem().getY());
		if(!this.upgrade.isColidiu()) {
			this.upgrade.getImagemDoUpgrade().getScaledCopy(50, 50).draw(100, 100);
		}
		
		g.drawString("VELOCIADE: "+this.jogador.getVelocidade(), 400, 400);
	}

	@Override
	public void update(GameContainer gc, int delta) throws SlickException {
		Input input = gc.getInput();
		
		if(this.jogador.getPosicaoDoPersonagem().getX() == this.upgrade.getPosicao().getX() ||
				this.jogador.getPosicaoDoPersonagem().getY() == this.upgrade.getPosicao().getY()) {
			this.upgrade.setColidiu(true);
			this.jogador.setUpgrades(this.upgrade);
			this.jogador.getUpgrades().getComportamentoUpgrade().upgrade(this.jogador);
		}
		
		if(input.isKeyDown(Input.KEY_UP)) {
			this.posicao.y-=1 * this.jogador.getVelocidade();
			this.jogador.setPosicaoDoPersonagem(this.posicao);
		}
		
		if(input.isKeyDown(Input.KEY_DOWN)) {
			this.posicao.y+=1 * this.jogador.getVelocidade();;
			this.jogador.setPosicaoDoPersonagem(this.posicao);
		}
		
		if(input.isKeyDown(Input.KEY_RIGHT)) {
			this.posicao.x+=1 * this.jogador.getVelocidade();;
			this.jogador.setPosicaoDoPersonagem(this.posicao);
		}
		
		if(input.isKeyDown(Input.KEY_LEFT)) {
			this.posicao.x-=1 * this.jogador.getVelocidade();;
			this.jogador.setPosicaoDoPersonagem(this.posicao);
		}
		
	}

}
